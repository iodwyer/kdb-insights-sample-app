# Volumes required by the three rt nodes, publisher and susbcriber
volumes:
  rt-data-0:        # persistent volume for rt-data-0
  rt-data-1:        # persistent volume for rt-data-1
  rt-data-2:        # persistent volume for rt-data-2
  rt-data-session:  # shared volume across all three rt containers, used to orchestrate hard reset
  # publisher-1:      # persistent volume for simple publisher
  sp_feed:   # persistent volume for python publisher
  da-orig:   # persistent volume for da orig
  sp_py:     # persistent volume for python sp

# Bridge network across all containers
x-kxnet:
  &kxnet
  networks:
    - kx
# Intra-RT ports, used for comms within the rt cluster:
#      - 127.0.0.1:4000:4000/tcp
#      - 127.0.0.1:5009:5009/tcp
#      - 127.0.0.1:7000:7000/udp
#      - 127.0.0.1:7100:7100/tcp
#      - 127.0.0.1:8000:8000/udp
#      - 127.0.0.1:9000:9000/udp
# Internal ports, used for comms between the internal publishers/subscribers and the rt cluster:
#      - 127.0.0.1:5001:5001/tcp
#      - 127.0.0.1:5002:5002/tcp
# External ports, used for comms between the external publishers and the rt cluster:
#      - 127.0.0.1:5000:5000/tcp

# Environment variables common to all RT sequencers
x-rt-env:
  &rt-env
    environment:
      - RT_TOPIC_PREFIX
      - RT_SINK
      - RAFT_HEARTBEAT
      - RAFT_LOG_SIZE
      - RAFT_CHUNK_SIZE
      - RT_LOGLEVEL_CONSOLE
      - RT_SEQ_SESSION_PATH
      - RT_EXTERN_PREFIX

# Startup command line common to all RT sequencers
x-rt-command:
  &rt-command
    command:
      [
        '-p',
        '6000',
        '-in',
        '$in_dir',
        '-out',
        '$out_dir',
        '-cp',
        '$state_dir',
        '-size',
        '$size',
        '-limit',
        '$limit',
        '-time',
        '$time',
        '-disk',
        '$disk'
      ]


networks:
  kx:
    name: kx
    driver: bridge

services:

  # RT services - these are different services (not replicas), each with its own volume
  rt-data-0:
    image: ${DOCKER_REG}/kxi-rt:${RT_VERSION}
    # Need to set hostname so rt nodes/publishers/subcribers can find each other
    hostname: rt-data-0
    container_name: rt-data-0
    <<: *rt-command
    # Have to run as root (default is nobody) in order to write to docker volume
    user: root
    restart: unless-stopped
    ports:
      - 127.0.0.1:5000:5000/tcp
      - 127.0.0.1:5001:5001/tcp
      - 127.0.0.1:5002:5002/tcp
    <<: *rt-env
    volumes:
      - rt-data-0:/s
      - rt-data-session:/rt-session
      - ${kx_licence_dir}:/opt/kx/lic
      - ${server_certs_dir}:/cert
    <<: *kxnet

  rt-data-1:
    image: ${DOCKER_REG}/kxi-rt:${RT_VERSION}
    # Need to set hostname so rt nodes/publishers/subcribers can find each other
    hostname: rt-data-1
    container_name: rt-data-1
    <<: *rt-command
    # Have to run as root (default is nobody) in order to write to docker volume
    user: root
    restart: unless-stopped
    ports:
      - 127.0.0.2:5000:5000/tcp
      - 127.0.0.2:5001:5001/tcp
      - 127.0.0.2:5002:5002/tcp
    <<: *rt-env
    volumes:
      - rt-data-1:/s
      - rt-data-session:/rt-session
      - ${kx_licence_dir}:/opt/kx/lic
      - ${server_certs_dir}:/cert
    <<: *kxnet

  rt-data-2:
    image: ${DOCKER_REG}/kxi-rt:${RT_VERSION}
    # Need to set hostname so rt nodes/publishers/subcribers can find each other
    hostname: rt-data-2
    container_name: rt-data-2
    <<: *rt-command
    # Have to run as root (default is nobody) in order to write to docker volume
    user: root
    restart: unless-stopped
    ports:
      - 127.0.0.3:5000:5000/tcp
      - 127.0.0.3:5001:5001/tcp
      - 127.0.0.3:5002:5002/tcp
    <<: *rt-env
    volumes:
      - rt-data-2:/s
      - rt-data-session:/rt-session
      - ${kx_licence_dir}:/opt/kx/lic
      - ${server_certs_dir}:/cert
    <<: *kxnet

  sp_feed:
    user: root
    # image: ${KX_DOCKER_REG}/kxi-sp-python:${SP_PY_VERSION}
    image: ${DOCKER_REG}/kxi-sp-python:${SP_PY_VERSION}
    container_name: rt-sp-feed
    environment:
      # - KX_KURL_DEBUG_LOG=0
      - KXI_SP_CHECKPOINT_DIR=${RT_LOG_PATH}
      - KX_KURL_LOG_LEVEL="OFF"
      - KXI_LOG_FORMAT=text # Optional
      - KXI_LOG_LEVELS=default:debug # Optional
      - RT_TOPIC_PREFIX=${RT_TOPIC_PREFIX}
      - RT_LOG_PATH=${RT_LOG_PATH}
      - KXI_SP_SPEC=/opt/kx/cfg/taq.py
    ports:
      - 127.0.0.1::${sp_feed_port}
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - sp_feed:/s
      - ./cfg:/opt/kx/cfg 
    env_file:
      - .env 
    stdin_open: true
    tty: true     
    <<: *kxnet

  sm:
  #
  # Storage Manager
  #  
    user: root
    image: "${DOCKER_REG}/kxi-sm-single:${SM_VERSION}"
    environment:
      - KXI_NAME=sm
      - KXI_SC=SM
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      # - KXI_RT_LIB=/opt/kx/cfg/rt_tick_client_lib.q
      - KXI_PORT=10001
      - KXI_LOG_FORMAT=text
      - KXI_LOG_LEVELS=default:debug  
      - RT_LOG_PATH=${RT_LOG_PATH}
    ports:
      - 127.0.0.1::10001
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic    
      - ${mnt_dir}:${mnt_dir}
      - ./tplog:/logs
      - ./cfg:/opt/kx/cfg 
    env_file:
      - .env 
    stdin_open: true
    tty: true
    <<: *kxnet      

  da-single:
    user: root
    image: ${DOCKER_REG}/kxi-da-single:${DA_VERSION}
    environment:
      - KXI_NAME=dap
      - KXI_SC=dap
      - KXI_PORT=5080
      - KXI_LOG_FORMAT=text # Optional
      - KXI_LOG_LEVELS=default:debug # Optional
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - KXI_DA_RDB_THREADS=0
      - KXI_DA_IDB_THREADS=4
      - KXI_DA_HDB_THREADS=8
      - KXI_CUSTOM_FILE=/opt/kx/cfg/custom.api.q
      - KX_TRACE_OBJSTR=1
      - KX_KURL_DEBUG_LOG=1      
      - KXI_SG_RC_ADDR=sgrc:5060
      - KXI_ALLOWED_SBX_APIS=.kxi.sql,.kxi.qsql
      - RT_LOG_PATH=${RT_LOG_PATH}
    ports:
      - 127.0.0.1::5080
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - ${mnt_dir}:${mnt_dir}   
      - ./tplog:/logs
      - ./cfg:/opt/kx/cfg    
      - da-orig:/logs/rdb
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env    
    stdin_open: true
    tty: true 
    <<: *kxnet  

  
  #
  # Resource Coordinator -- 1 per assembly.
  #
  sgrc:
    user: root
    image: ${DOCKER_REG}/kxi-sg-rc:${SG_VERSION}
    environment:
      - KXI_NAME=sg_rc
      - KXI_PORT=5060
      - KXI_LOG_FORMAT=text # Optional
      - KXI_LOG_LEVELS=default:debug # Optional
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - KXI_AUTH_DISABLED=1
      - KXI_ALLOWED_SBX_APIS=.kxi.sql,.kxi.qsql
    ports:
      - 127.0.0.1::5060
    stdin_open: true
    tty: true 
    env_file:
      - .env     
    volumes: 
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - ./cfg:/opt/kx/cfg         
    <<: *kxnet  
  #
  # Aggregator. Note we only have one here, but multiple can be configured.
  #
  sgagg:
    user: root
    image: ${DOCKER_REG}/kxi-sg-agg:${SG_VERSION}
    environment:
      - KXI_NAME=sg_agg
      - KXI_PORT=5050
      - KXI_LOG_FORMAT=text # Optional
      - KXI_LOG_LEVELS=default:info # Optional
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - KXI_SG_RC_ADDR=sgrc:5060
      - KXI_AUTH_DISABLED=1
    ports:
      - 127.0.0.1::5050
    # Optional: deploy multiple replicas.
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env     
    stdin_open: true
    tty: true 
    volumes: 
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - ./cfg:/opt/kx/cfg          
    <<: *kxnet  
  #
  # Gateway.
  #
  sggw:
    user: root
    image: ${DOCKER_REG}/kxi-sg-gw:${SG_VERSION}
    environment:
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - GATEWAY_QIPC_PORT=5040
      - GATEWAY_HTTP_PORT=8080
      - KXI_AUTH_DISABLED=1
      - KXI_LOG_FORMAT=text # Optional
      - KXI_LOG_LEVELS=default:trace # Optional  
      - KXI_SG_RC_ADDR=sgrc:5060   
    ports:
      - 127.0.0.1:5555:5040
      - 127.0.0.1::8080
    # Optional: deploy multiple replicas.
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env     
    stdin_open: true
    tty: true  
    volumes: 
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - ./cfg:/opt/kx/cfg        
    <<: *kxnet  


  sp_py:
    user: root
    # image: ${KX_DOCKER_REG}/kxi-sp-python:${SP_PY_VERSION}
    image: ${DOCKER_REG}/kxi-sp-python:${SP_PY_VERSION}
    container_name: rt-sp-py
    environment:
      # - KX_KURL_DEBUG_LOG=0
      - KXI_SP_CHECKPOINT_DIR=${RT_LOG_PATH}
      - KX_KURL_LOG_LEVEL="OFF"
      - KXI_LOG_FORMAT=text # Optional
      - KXI_LOG_LEVELS=default:debug # Optional
      - RT_TOPIC_PREFIX=${RT_TOPIC_PREFIX}
      - RT_LOG_PATH=${RT_LOG_PATH}
      - KXI_SP_SPEC=/opt/kx/cfg/python_sp.py
    ports:
      - 127.0.0.1::${sp_py_port}
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - sp_py:/s
      - ./cfg:/opt/kx/cfg 
    env_file:
      - .env 
    stdin_open: true
    tty: true     
    <<: *kxnet