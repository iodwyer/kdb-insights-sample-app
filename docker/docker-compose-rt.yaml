version: "3"

# Volumes required by the three rt nodes, publisher and susbcriber
# volumes:
  # rt-data-0:        # persistent volume for rt-data-0
  # rt-data-session:  # shared volume across all three rt containers, used to orchestrate hard reset
  # subscriber-1:     # persistent volume for simple subscriber
  # publisher-1:      # persistent volume for python publisher
  # sm-logs:
  # da-logs:
  # data:


#
# Services.
#
services:

  sp_feed:
    image: ${KX_DOCKER_REG}/kxi-sp-python:${SP_PY_VERSION}
    command: -p 5000
    restart: "always"
    container_name: rt-sp-feed 
    environment:
      - KXI_LOG_LEVELS=default:debug # Override
      - KXI_SP_SPEC=/opt/kx/cfg/taq_rt.py
      # - KXI_SP_CHECKPOINT_DIR=/sp
      # - KXI_SP_BETA_FEATURES=true
    ports:
      - 127.0.0.1::5000
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - ./sp:/sp   
      - ./cfg:/opt/kx/cfg 
      - ./sp-log:/s
    env_file:
      - .env 
    stdin_open: true
    tty: true     

  # tp:
  #   image: ${KX_DOCKER_REG}/qce:${QCE_VERSION}
  #   restart: "always"
  #   environment:
  #     - KXI_LOG_LEVELS=default:debug # Optional
  #   ports:
  #     - 127.0.0.1::5010
  #   command: tick.q sym /logs -p 5010
  #   working_dir: /opt/kx/tick
  #   volumes:
  #     - ${HOME}/.qp.licenses:/opt/kx/lic    
  #     - ./tplog:/logs
  #     - ./kdb-tick:/opt/kx/tick
  #   env_file:
  #     - .env 
  #   stdin_open: true
  #   tty: true    

  # RT services - these are different services (not replicas), each with its own volume
  rt-data-0:
    image: ${KX_DOCKER_REG}/kxi-rt:${RT_VERSION}
    # Need to set hostname so rt nodes/publishers/subcribers can find each other
    hostname: rt-data-0
    container_name: rt-data-0
    # <<: [*rt-command, *rt-env]
    command: ['-p','6000','-in','$in_dir','-out','$out_dir','-cp','$state_dir','-size','$RT_REPLICAS','-limit','$limit','-time','$time','-disk','$disk']
    # Have to run as root (default is nobody) in order to write to docker volume
    user: root
    restart: unless-stopped
    # environment:
    #   - RT_TOPIC_PREFIX
    #   - RT_SINK
    #   - RAFT_HEARTBEAT
    #   - RAFT_LOG_SIZE
    #   - RAFT_CHUNK_SIZE
    #   - RT_LOGLEVEL_CONSOLE
    #   - RT_SEQ_SESSION_PATH
    #   - RT_EXTERN_PREFIX
    #   - RT_QURAFT_LOG_LEVEL
    #   - RT_LOG_LEADER
    env_file:
      - .env 
    ports:
      - 127.0.0.1:5000:5000/tcp
      - 127.0.0.1:5001:5001/tcp
      - 127.0.0.1:5002:5002/tcp
    volumes:
      - ./rt-data-0:/s
      - ./rt-data-session:/rt-session
      - ${HOME}/.qp.licenses:/opt/kx/lic 


  sm:
  #
  # Storage Manager
  #  
    image: ${KX_DOCKER_REG}/kxi-sm-single:${SM_VERSION}
    restart: "always"
    # user: root
    container_name: sm-single
    environment:
      - KXI_NAME=sm
      - KXI_SC=SM
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - KXI_RT_LIB=/opt/kx/cfg/rt_tick_client_lib.q
      - KXI_SM_SMPORT=10001
      - KXI_SM_EOIPORT=10002
      - KXI_LOG_LEVELS=default:info  
      # - KXI_LATE_DATA=true    
    ports:
      - 127.0.0.1::10001
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic    
      # - ./data:/data
      - ./data:/data
      # - ./tplog:/logs
      - ./sm-logs:/logs
      - ./cfg:/opt/kx/cfg 
      # - ./subscriber-1:/s
    env_file:
      - .env 
    stdin_open: true
    tty: true      

  da-single:
    image: ${KX_DOCKER_REG}/kxi-da-single:${DA_VERSION}
    restart: "always"
    # user: root
    container_name: da-single
    environment:
      - KXI_NAME=dap
      - KXI_SC=dap
      - KXI_PORT=5080
      - KXI_LOG_LEVELS=default:trace # Override
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - KXI_DA_RDB_THREADS=0
      - KXI_DA_IDB_THREADS=4
      - KXI_DA_HDB_THREADS=8
      # - KXI_RT_LIB=/opt/kx/cfg/rt_tick_client_lib.q
      - KXI_CUSTOM_FILE=/opt/kx/cfg/custom.api.q
      - KXI_SG_RC_ADDR=sgrc:5060
      - KXI_ALLOWED_SBX_APIS=.kxi.sql,.kxi.qsql
    ports:
      - 127.0.0.1::5080
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic    
      # - ./data:/data
      - ./data:/data
      # - ./tplog:/logs
      # - ./da-logs:/logs/rdb
      # - ./da-logs:/logs
      - ./cfg:/opt/kx/cfg     
      - ./da-logs:/s
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env    
    stdin_open: true
    tty: true 

  #
  # Resource Coordinator -- 1 per assembly.
  #
  sgrc:
    image: ${KX_DOCKER_REG}/kxi-sg-rc:${SG_VERSION}
    restart: "always"
    environment:
      - KXI_NAME=sg_rc
      - KXI_PORT=5060
      - KXI_LOG_LEVELS=default:debug # Override
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - KXI_AUTH_DISABLED=1
      - KXI_ALLOWED_SBX_APIS=.kxi.sql,.kxi.qsql
    ports:
      - 127.0.0.1::5060
    stdin_open: true
    tty: true 
    env_file:
      - .env     
    volumes: 
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - ./cfg:/opt/kx/cfg         

  #
  # Aggregator. Note we only have one here, but multiple can be configured.
  #
  sgagg:
    image: ${KX_DOCKER_REG}/kxi-sg-agg:${SG_VERSION}
    restart: "always"
    environment:
      - KXI_NAME=sg_agg
      - KXI_PORT=5050
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - KXI_SG_RC_ADDR=sgrc:5060
      - KXI_AUTH_DISABLED=1
    ports:
      - 127.0.0.1::5050
    # Optional: deploy multiple replicas.
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env     
    stdin_open: true
    tty: true 
    volumes: 
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - ./cfg:/opt/kx/cfg                

  #
  # Gateway.
  #
  sggw:
    image: ${KX_DOCKER_REG}/kxi-sg-gw:${SG_VERSION}
    restart: "always"
    environment:
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - GATEWAY_QIPC_PORT=5040
      - GATEWAY_HTTP_PORT=8080
      - KXI_AUTH_DISABLED=1
      - KXI_LOG_LEVELS=default:trace # Override  
      - KXI_SG_RC_ADDR=sgrc:5060   
    ports:
      - 5040:5040
      - 8080:8080
    # Optional: deploy multiple replicas.
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env     
    stdin_open: true
    tty: true  
    volumes: 
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - ./cfg:/opt/kx/cfg         


  # rdb:
  # #
  # # Intraday Database
  # #
  #   image: ${KX_DOCKER_REG}/kxi-da:${DA_VERSION}
  #   restart: "always"
  #   environment:
  #     - KXI_NAME=rdb
  #     - KXI_SC=RDB
  #     - KXI_PORT=5090
  #     # - KXI_LOG_LEVELS=default:trace # Override
  #     - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
  #     - KXI_CUSTOM_FILE=/opt/kx/cfg/custom.api.q  
  #     - KXI_RT_LIB=/opt/kx/cfg/rt_tick_client_lib.q
  #     - KXI_SG_RC_ADDR=sgrc:5060
  #   ports:
  #     - 127.0.0.1::5090
  #   volumes:
  #     - ${HOME}/.qp.licenses:/opt/kx/lic    
  #     - ./data:/data
  #     - ./cfg:/opt/kx/cfg   
  #     - ./tplog:/logs    
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #   env_file:
  #     - .env           
  #   stdin_open: true
  #   tty: true    

  # idb:
  # #
  # # Intraday Database
  # #
  #   image: ${KX_DOCKER_REG}/kxi-da:${DA_VERSION}
  #   restart: "always"
  #   command: -s 4
  #   environment:
  #     - KXI_NAME=idb
  #     - KXI_SC=IDB
  #     - KXI_PORT=5090
  #     - KXI_LOG_LEVELS=default:trace # Override
  #     - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
  #     - KXI_CUSTOM_FILE=/opt/kx/cfg/custom.api.q
  #     - KXI_SG_RC_ADDR=sgrc:5060
  #     - KXI_ALLOWED_SBX_APIS=.kxi.sql,.kxi.qsql
  #   ports:
  #     - 127.0.0.1::5090
  #   volumes:
  #     - ${HOME}/.qp.licenses:/opt/kx/lic    
  #     - ./data:/data
  #     - ./cfg:/opt/kx/cfg       
  #   deploy:
  #     mode: replicated
  #     replicas: 2
  #   env_file:
  #     - .env           
  #   stdin_open: true
  #   tty: true    

  # hdb:
  # #
  # # Historical Database
  # #
  #   image: ${KX_DOCKER_REG}/kxi-da:${DA_VERSION}
  #   restart: "always"
  #   command: -s 8
  #   environment:
  #     - KXI_NAME=hdb
  #     - KXI_SC=HDB
  #     - KXI_PORT=5100      
  #     - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
  #     - KXI_CUSTOM_FILE=/opt/kx/cfg/custom.api.q      
  #     - KXI_SG_RC_ADDR=sgrc:5060
  #     - KXI_ALLOWED_SBX_APIS=.kxi.sql,.kxi.qsql
  #     # - KX_OBJSTR_INVENTORY_FILE=_inventory/all.json.gz
  #     # - KX_OBJSTR_CACHE_PATH=/opt/kx/cache
  #     # - KX_OBJSTR_CACHE_SIZE=10000
  #     # - KXI_CUSTOM_FILE=/opt/kx/cfg/custom.api.q      
  #   ports:
  #     - 127.0.0.1::5100
  #   volumes: 
  #     - ${HOME}/.qp.licenses:/opt/kx/lic 
  #     - ./cfg:/opt/kx/cfg 
  #     - ./data:/data
  #     # - ./cache:/opt/kx/cache        
  #   deploy:
  #     mode: replicated
  #     replicas: 2
  #   env_file:
  #     - .env       
  #   stdin_open: true
  #   tty: true        


  # feed:
  #   image: ${KX_DOCKER_REG}/qce:${QCE_VERSION}
  #   depends_on:
  #     - tp    
  #   environment:
  #     - KXI_LOG_FORMAT=text # Optional
  #     - KXI_LOG_LEVELS=default:debug # Optional
  #   ports:
  #     - 127.0.0.1::5009
  #   command: /opt/kx/cfg/proc/feed.q -p 5009 
  #   volumes:
  #     - ${HOME}/.qp.licenses:/opt/kx/lic    
  #     - ./cfg:/opt/kx/cfg 
  #   env_file:
  #     - .env 
  #   stdin_open: true
  #   tty: true     