version: "3"

volumes:
  rt-dfx-assembly-0:        # persistent volume for rt-dfx-assembly-0
  rt-dfx-assembly-1:        # persistent volume for rt-dfx-assembly-1
  rt-dfx-assembly-2:        # persistent volume for rt-dfx-assembly-2
  rt-dfx-assembly-session:  
  sp_feed:   # persistent volume for python publisher
  da-orig:   # persistent volume for da orig

x-rt-command:
  &rt-command
    command:
      [
        '-p',
        '6000',
        '-in',
        '$in_dir',
        '-out',
        '$out_dir',
        '-cp',
        '$state_dir',
        '-size',
        '$size',
        '-limit',
        '$limit',
        '-time',
        '$time',
        '-disk',
        '$disk'
      ]

#
# Services.
#
services:

  rt-dfx-assembly-0:
    image: ${KX_DOCKER_REG}/kxi-rt:${RT_VERSION}
    # Need to set hostname so rt nodes/publishers/subcribers can find each other
    hostname: rt-dfx-assembly-0
    container_name: rt-dfx-assembly-0
    <<: *rt-command
    # Have to run as root (default is nobody) in order to write to docker volume
    user: root
    restart: unless-stopped
    ports:
      - 127.0.0.1:5000:5000/tcp
      - 127.0.0.1:5001:5001/tcp
      - 127.0.0.1:5002:5002/tcp
    env_file:
      - .env 
    volumes:
      - rt-dfx-assembly-0:/s
      - rt-dfx-assembly-session:/rt-session
      - ${HOME}/.qp.licenses:/opt/kx/lic  
      # - ${server_certs_dir}:/cert

  rt-dfx-assembly-1:
    image: ${KX_DOCKER_REG}/kxi-rt:${RT_VERSION}
    # Need to set hostname so rt nodes/publishers/subcribers can find each other
    hostname: rt-dfx-assembly-1
    container_name: rt-dfx-assembly-1
    <<: *rt-command
    # Have to run as root (default is nobody) in order to write to docker volume
    user: root
    restart: unless-stopped
    ports:
      - 127.0.0.2:5000:5000/tcp
      - 127.0.0.2:5001:5001/tcp
      - 127.0.0.2:5002:5002/tcp
    env_file:
      - .env 
    volumes:
      - rt-dfx-assembly-1:/s
      - rt-dfx-assembly-session:/rt-session
      - ${HOME}/.qp.licenses:/opt/kx/lic  
      # - ${server_certs_dir}:/cert

  rt-dfx-assembly-2:
    image: ${KX_DOCKER_REG}/kxi-rt:${RT_VERSION}
    # Need to set hostname so rt nodes/publishers/subcribers can find each other
    hostname: rt-dfx-assembly-2
    container_name: rt-dfx-assembly-2
    <<: *rt-command
    # Have to run as root (default is nobody) in order to write to docker volume
    user: root
    restart: unless-stopped
    ports:
      - 127.0.0.3:5000:5000/tcp
      - 127.0.0.3:5001:5001/tcp
      - 127.0.0.3:5002:5002/tcp
    env_file:
      - .env 
    volumes:
      - rt-dfx-assembly-2:/s
      - rt-dfx-assembly-session:/rt-session
      - ${HOME}/.qp.licenses:/opt/kx/lic  
      # - ${server_certs_dir}:/cert


  sp_feed:
    image: ${KX_DOCKER_REG}/kxi-sp-python:${SP_PY_VERSION}
    container_name: rt-sp-feed
    user: root
    # depends_on:
    #   - tp    
    environment:
      - KX_KURL_DEBUG_LOG=1
      - KXI_LOG_FORMAT=text # Optional
      - KXI_LOG_LEVELS=default:debug # Optional
      - KXI_SP_SPEC=/opt/kx/cfg/taq.py
      - KXI_SP_CHECKPOINT_DIR=${RT_LOG_PATH}
    ports:
      - 127.0.0.1::5000
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - sp_feed:/s
      - ./sp:/sp   
      - ./cfg:/opt/kx/cfg 
    env_file:
      - .env 
    stdin_open: true
    tty: true     

  # tp:
  #   image: ${KX_DOCKER_REG}/qce:${QCE_VERSION}
  #   environment:
  #     - KX_KURL_DEBUG_LOG=1
  #     - KXI_LOG_FORMAT=text # Optional
  #     - KXI_LOG_LEVELS=default:debug # Optional
  #   ports:
  #     - 127.0.0.1::5010
  #   command: tick.q sym /logs -p 5010
  #   working_dir: /opt/kx/tick
  #   volumes:
  #     - ${HOME}/.qp.licenses:/opt/kx/lic    
  #     - ./tplog:/logs
  #     - ./kdb-tick:/opt/kx/tick
  #   env_file:
  #     - .env 
  #   stdin_open: true
  #   tty: true    

  sm:
  #
  # Storage Manager
  #  
    image: ${KX_DOCKER_REG}/kxi-sm-single:${SM_VERSION}
    # depends_on:
    #   - tp
    environment:
      - KXI_NAME=sm
      - KXI_SC=SM
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      # - KXI_RT_LIB=/opt/kx/cfg/rt_tick_client_lib.q
      # - KXI_PORT=10001
      - KXI_LOG_FORMAT=text
      - KXI_LOG_LEVELS=default:info  
      - RT_LOG_PATH=${RT_LOG_PATH}    
    ports:
      - 127.0.0.1::10001
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic    
      - ./data:/data
      - ./tplog:/logs
      - ./cfg:/opt/kx/cfg 
    env_file:
      - .env 
    stdin_open: true
    tty: true      

  da-single:
    image: ${KX_DOCKER_REG}/kxi-da-single:${DA_VERSION}
    user: root
    environment:
      - KXI_NAME=dap
      - KXI_SC=dap
      - KXI_PORT=5080
      - KXI_LOG_FORMAT=text # Optional
      - KXI_LOG_LEVELS=default:info # Optional
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - KXI_DA_RDB_THREADS=0
      - KXI_DA_IDB_THREADS=4
      - KXI_DA_HDB_THREADS=8
      # - KXI_RT_LIB=/opt/kx/cfg/rt_tick_client_lib.q
      - KXI_CUSTOM_FILE=/opt/kx/cfg/custom.api.q
      - KX_TRACE_OBJSTR=1
      - KX_KURL_DEBUG_LOG=1      
      - KXI_SG_RC_ADDR=sgrc:5060
      - KXI_ALLOWED_SBX_APIS=.kxi.sql,.kxi.qsql
      - RT_LOG_PATH=${RT_LOG_PATH}
    ports:
      - 127.0.0.1::5080
    volumes:
      - ${HOME}/.qp.licenses:/opt/kx/lic    
      - ./data:/data
      - ./tplog:/logs
      - ./cfg:/opt/kx/cfg     
      - da-orig:/logs/rdb
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env    
    stdin_open: true
    tty: true 


  
  #
  # Resource Coordinator -- 1 per assembly.
  #
  sgrc:
    image: ${KX_DOCKER_REG}/kxi-sg-rc:${SG_VERSION}
    environment:
      - KXI_NAME=sg_rc
      - KXI_PORT=5060
      - KXI_LOG_FORMAT=text # Optional
      - KXI_LOG_LEVELS=default:debug # Optional
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - KXI_AUTH_DISABLED=1
      - KXI_ALLOWED_SBX_APIS=.kxi.sql,.kxi.qsql
    ports:
      - 127.0.0.1::5060
    stdin_open: true
    tty: true 
    env_file:
      - .env     
    volumes: 
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - ./cfg:/opt/kx/cfg         

  #
  # Aggregator. Note we only have one here, but multiple can be configured.
  #
  sgagg:
    image: ${KX_DOCKER_REG}/kxi-sg-agg:${SG_VERSION}
    environment:
      - KXI_NAME=sg_agg
      - KXI_PORT=5050
      - KXI_LOG_FORMAT=text # Optional
      - KXI_LOG_LEVELS=default:info # Optional
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - KXI_SG_RC_ADDR=sgrc:5060
      - KXI_AUTH_DISABLED=1
    ports:
      - 127.0.0.1::5050
    # Optional: deploy multiple replicas.
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env     
    stdin_open: true
    tty: true 
    volumes: 
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - ./cfg:/opt/kx/cfg                

  #
  # Gateway.
  #
  sggw:
    image: ${KX_DOCKER_REG}/kxi-sg-gw:${SG_VERSION}
    environment:
      - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
      - GATEWAY_QIPC_PORT=5040
      - GATEWAY_HTTP_PORT=8080
      - KXI_AUTH_DISABLED=1
      - KXI_LOG_FORMAT=text # Optional
      - KXI_LOG_LEVELS=default:trace # Optional  
      - KXI_SG_RC_ADDR=sgrc:5060   
    ports:
      - 5040:5040
      - 8080:8080
    # Optional: deploy multiple replicas.
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - .env     
    stdin_open: true
    tty: true  
    volumes: 
      - ${HOME}/.qp.licenses:/opt/kx/lic 
      - ./cfg:/opt/kx/cfg         

  # idb:
  # #
  # # Intraday Database
  # #
  #   image: ${KX_DOCKER_REG}/kxi-da:${DA_VERSION}
  #   # command: -p 5090
  #   environment:
  #     - KXI_NAME=idb
  #     - KXI_SC=IDB
  #     - KXI_PORT=5090
  #     - KXI_LOG_FORMAT=text # Optional
  #     - KXI_LOG_LEVELS=default:trace # Optional
  #     - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
  #     - KX_TRACE_OBJSTR=1
  #     - KX_KURL_DEBUG_LOG=1    
  #     # - KXI_CUSTOM_FILE=/opt/kx/cfg/custom.api.q  
  #     - KXI_SG_RC_ADDR=sgrc:5060
  #   ports:
  #     - 127.0.0.1::5090
  #   volumes:
  #     - ${HOME}/.qp.licenses:/opt/kx/lic    
  #     - ./data:/data
  #     - ./cfg:/opt/kx/cfg       
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #   env_file:
  #     - .env           
  #   stdin_open: true
  #   tty: true    

  # hdb:
  # #
  # # Historical Database
  # #
  #   image: ${KX_DOCKER_REG}/kxi-da:${DA_VERSION}
  #   command: -s 8
  #   environment:
  #     - KXI_NAME=hdb
  #     - KXI_SC=HDB
  #     - KXI_PORT=5100      
  #     - KXI_LOG_FORMAT=text # Optional
  #     - KXI_LOG_LEVELS=default:trace # Optional
  #     - KXI_ASSEMBLY_FILE=/opt/kx/cfg/${ASSEMBLY_FILE_YAML}
  #     - KX_TRACE_OBJSTR=1
  #     - KX_KURL_DEBUG_LOG=1   
  #     # - KX_OBJSTR_INVENTORY_FILE=_inventory/all.json.gz
  #     # - KX_OBJSTR_CACHE_PATH=/opt/kx/cache
  #     # - KX_S3_CACHE_SIZE=10000
  #     # - KXI_CUSTOM_FILE=/opt/kx/cfg/custom.api.q      
  #   ports:
  #     - 127.0.0.1::5100
  #   volumes: 
  #     - ${HOME}/.qp.licenses:/opt/kx/lic 
  #     - ./cfg:/opt/kx/cfg 
  #     - ./data:/data
  #     - ./cache:/opt/kx/cache        
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #   env_file:
  #     - .env       
  #   stdin_open: true
  #   tty: true        


  # tp:
  #   image: ${KX_DOCKER_REG}/qce:${QCE_VERSION}
  #   environment:
  #     - KX_KURL_DEBUG_LOG=1
  #     - KXI_LOG_FORMAT=text # Optional
  #     - KXI_LOG_LEVELS=default:debug # Optional
  #   ports:
  #     - 127.0.0.1::5010
  #   command: /opt/kx/cfg/proc/tp.q -p 5010 -logDir /opt/kx/tplog -cfg /opt/kx/cfg
  #   volumes:
  #     - ${HOME}/.qp.licenses:/opt/kx/lic    
  #     - ./tplog:/opt/kx/tplog
  #     - ./cfg:/opt/kx/cfg 
  #   env_file:
  #     - .env 
  #   stdin_open: true
  #   tty: true    


  # feed:
  #   image: ${KX_DOCKER_REG}/qce:${QCE_VERSION}
  #   depends_on:
  #     - tp    
  #   environment:
  #     - KX_KURL_DEBUG_LOG=1
  #     - KXI_LOG_FORMAT=text # Optional
  #     - KXI_LOG_LEVELS=default:debug # Optional
  #   ports:
  #     - 127.0.0.1::5009
  #   command: /opt/kx/cfg/proc/feed.q -p 5009 
  #   volumes:
  #     - ${HOME}/.qp.licenses:/opt/kx/lic    
  #     - ./cfg:/opt/kx/cfg 
  #   env_file:
  #     - .env 
  #   stdin_open: true
  #   tty: true     